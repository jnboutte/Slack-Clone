{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","src","photoURL","alt","displayName","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","type","Button","hidden","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","className","Date","toDate","toUTCString","Chat","useRef","useSelector","roomDetails","useDocument","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f6aac22.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDtoGl4GW25EKEL9rgsSkBp562DgE1YIkE\",\r\n    authDomain: \"slack-clone-df411.firebaseapp.com\",\r\n    projectId: \"slack-clone-df411\",\r\n    storageBucket: \"slack-clone-df411.appspot.com\",\r\n    messagingSenderId: \"395722915023\",\r\n    appId: \"1:395722915023:web:0eff3fd5d854edf8e38bba\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebase.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { auth, provider, db }; \r\n","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Header() {\r\n    const [user] = useAuthState(auth);\r\n    \r\n    return (\r\n        <HeaderContainer>\r\n            <HeaderLeft>\r\n               <HeaderAvatar\r\n                onClick={() => auth.signOut()} \r\n                src= {user?.photoURL}\r\n                alt= {user?.displayName} \r\n               />\r\n               <AccessTimeIcon />\r\n            </HeaderLeft>\r\n\r\n            <HeaderSearch>\r\n                <SearchIcon />\r\n                <input placeholder=\"Search Channels\" />\r\n            </HeaderSearch>\r\n\r\n            <HeaderRight>\r\n                <HelpOutlineIcon />\r\n            </HeaderRight>\r\n        \r\n        </HeaderContainer>\r\n    );\r\n}\r\n\r\nexport default Header ;\r\n\r\nconst HeaderContainer = styled.div`\r\n    display: flex;\r\n    position: fixed;\r\n    width: 100%;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 10px 0;\r\n    background-color: var(--slack-color);\r\n    color: white;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    flex: 0.3;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 20px;\r\n\r\n    > .MuiSvgIcon-root {\r\n        margin-left: auto;\r\n        margin-right: 30px;\r\n    }\r\n`;\r\n\r\nconst HeaderAvatar = styled(Avatar)`\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst HeaderSearch = styled.div`\r\nflex: 0.4;\r\nopacity: 1;\r\nborder-radius: 6px;\r\nbackground-color: #421f44;\r\ntext-align: center;\r\ndisplay: flex;\r\npadding: 0 50px;\r\ncolor: gray;\r\nborder: 1px gray solid;\r\n\r\n> input {\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw;\r\n    outline: 0;\r\n    color: white;\r\n}\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    flex: 0.3;\r\n    display: flex;\r\n    align-items: flex-end;\r\n\r\n    > .MuiSvgIcon-root {\r\n        margin-left: auto;\r\n        margin-right: 20px;\r\n    }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = (state) => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { enterRoom } from \"../features/appSlice\";\r\nimport { db } from \"../firebase\";\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\r\n    const dispatch = useDispatch();\r\n\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            dispatch(enterRoom({\r\n                roomId: id,\r\n            }))\r\n        }\r\n    };\r\n\r\n    const addChannel = () => {\r\n        const channelName = prompt('Please enter the channel name');\r\n\r\n        if (channelName) {\r\n            db.collection('rooms').add({\r\n                name: channelName,\r\n            });\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <SidebarOptionContainer\r\n            onClick={addChannelOption ? addChannel : selectChannel}\r\n        >\r\n            {Icon && <Icon fontSize='small' style={{ padding: 10}} />}\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ): (\r\n                <SidebarOptionChannel>\r\n                    <span>#</span> {title}\r\n                </SidebarOptionChannel>\r\n            )}\r\n        </SidebarOptionContainer>\r\n    );\r\n}\r\n\r\nexport default SidebarOption\r\n\r\nconst SidebarOptionContainer = styled.div`\r\ndisplay: flex;\r\nfont-size: 12px;\r\nalign-items: center;\r\npadding-left: 2px;\r\ncursor: pointer;\r\n\r\n:hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n}\r\n\r\n> h3 {\r\n    font-weight: 500;\r\n}\r\n\r\n> h3 > span {\r\n    padding: 15px;\r\n}\r\n`;\r\n\r\nconst SidebarOptionChannel = styled.h3`\r\n    padding: 10px 0;\r\n    font-weight: 300;\r\n`;","\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'; \r\nimport SidebarOption from './SidebarOption';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useCollection } from 'react-firebase-hooks/firestore';\r\nimport { auth, db } from \"../firebase\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction Sidebar() {\r\n    const [channels] = useCollection(db.collection(\"rooms\"));\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <SidebarContainer> \r\n            <SidebarHeader>\r\n                <SidebarInfo>\r\n                    <h2>Slack Clone</h2>\r\n                    <h3>\r\n                        <FiberManualRecordIcon />\r\n                        {user?.displayName}\r\n                    </h3>\r\n                </SidebarInfo>\r\n                <CreateIcon />\r\n            </SidebarHeader>\r\n\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\" />\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\r\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User Groups\" />\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File Browser\" />\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\r\n            <hr />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n            <hr />\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n            {channels?.docs.map((doc) => (\r\n                <SidebarOption key={doc.id} title={doc.data().name} id={doc.id} />\r\n            ))}\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n\r\nconst SidebarContainer = styled.div`\r\n    background-color: var(--slack-color);\r\n    color: white;\r\n    flex: 0.3;\r\n    border-top: 1px solid #49274b;\r\n    max-width: 260px;\r\n    margin-top: 60px;\r\n\r\n    >hr {\r\n        margin-top: 10px;\r\n        margin-bottom: 10px;\r\n        border: 1px solid #49274b;\r\n    }\r\n`;\r\n\r\nconst SidebarHeader = styled.div`\r\n    display: flex;\r\n    border-bottom: 1px solid #49274b;\r\n    padding: 13px;\r\n\r\n    > .MuiSvgIcon-root {\r\n        padding: 8px;\r\n        color: #49274b;\r\n        font-size: 18px;\r\n        background-color: white;\r\n        border-radius: 999px;\r\n    }\r\n`;\r\n\r\nconst SidebarInfo = styled.div`\r\n    flex: 1;\r\n\r\n    > h2 {\r\n        font-size: 15px;\r\n        font-weight: 900;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    > h3 {\r\n        display: flex;\r\n        font-size: 13px;\r\n        font-weight: 400;\r\n        align-items: center;\r\n    }\r\n\r\n    > h3 > .MuiSvgIcon-root {\r\n        font-size: 14px;\r\n        margin-top: 1px;\r\n        margin-right: 2px;\r\n        color: green;\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\nimport { auth, db } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n        const [input, setInput] = useState('');\r\n        const [user] = useAuthState(auth);\r\n        \r\n    const sendMessage = (e) => {\r\n        e.preventDefault(); //Prevents refresh\r\n\r\n        if (!channelId) {\r\n            return false;\r\n        }\r\n\r\n        db.collection('rooms').doc(channelId).collection('messages').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n        });\r\n\r\n        chatRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n        })\r\n        \r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <ChatInputContainer>\r\n            <form>\r\n                <input \r\n                placeholder={`Message #${channelName}`}\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                type=\"text\"\r\n                />\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n        </ChatInputContainer>\r\n    )\r\n}\r\n\r\nexport default ChatInput;\r\n\r\nconst ChatInputContainer = styled.div`\r\n    border-radius: 20px;\r\n\r\n    > form {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    > form > input {\r\n        position: fixed;\r\n        bottom: 30px;\r\n        width: 60%;\r\n        border: 1px solid gray;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        outline: none;\r\n    }\r\n\r\n    > form > button {\r\n        display: none !important;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt='' />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user}{''}\r\n                    <span className='message_timestamp'>\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  > img {\r\n    height: 50px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst MessageInfo = styled.div`\r\n  padding-left: 10px;\r\n  > h4 > span {\r\n    color: gray;\r\n    font-weight: 300;\r\n    margin-left: 4px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectRoomId } from '../features/appSlice';\r\nimport ChatInput from './ChatInput';\r\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\r\nimport { db } from '../firebase';\r\nimport Message from './Message';\r\n\r\nfunction Chat() {\r\n    const chatRef = useRef(null);\r\n    const roomId = useSelector(selectRoomId);\r\n    const [roomDetails] = useCollection(\r\n        roomId && db.collection('rooms').doc(roomId)\r\n    );\r\n    const [roomMessages, loading] = useDocument(\r\n        roomId &&\r\n            db\r\n                .collection('rooms')\r\n                .doc(roomId)\r\n                .collection('messages')\r\n                .orderBy('timestamp','asc')\r\n    );\r\n\r\n    useEffect(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: 'smooth',\r\n        });\r\n    }, [roomId, loading])\r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessages && (\r\n            <>\r\n            <Header>\r\n                <HeaderLeft>\r\n                    <h4>\r\n                        <strong>#{roomDetails?.data().name}</strong>\r\n                    </h4>\r\n                    <StarBorderOutlinedIcon />\r\n                </HeaderLeft>\r\n                \r\n                <HeaderRight>\r\n                    <p>\r\n                        <InfoOutlinedIcon /> Details\r\n                    </p>\r\n                </HeaderRight>\r\n            </Header>\r\n\r\n            <ChatMessages>\r\n                {roomMessages?.docs.map(doc => {\r\n                    const { message, timestamp, user, userImage } = doc.data();\r\n\r\n                    return (\r\n                        <Message \r\n                            key={doc.id}\r\n                            message={message}\r\n                            timestamp={timestamp}\r\n                            user={user}\r\n                            userImage={userImage}\r\n                        />\r\n                    )\r\n                })}\r\n                <ChatBottom ref={chatRef} />\r\n            </ChatMessages>\r\n\r\n            <ChatInput\r\n                chatRef={chatRef}\r\n                channelName={roomDetails?.data().name} \r\n                channelId={roomId}\r\n            />\r\n          </>      \r\n            )}\r\n        </ChatContainer>\r\n    )}\r\n\r\nexport default Chat;\r\n\r\nconst ChatBottom = styled.div`\r\n    padding-bottom: 200px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > h4 {\r\n        display: flex;\r\n        text-transform: lowercase;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    > h4 > .MuiSvgIcon-root {\r\n        margin-left: 10px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    }\r\n\r\n    > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n    flex: 0.7;\r\n    flex-grow: 1;\r\n    overflow-y: scroll;\r\n    margin-top: 60px;\r\n`;\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styled from 'styled-components'; \r\nimport { auth, provider } from '../firebase';\r\n\r\nfunction Login() {\r\n    const signIn = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).catch((error) =>\r\n        alert(error.message));\r\n    };\r\n    \r\n    return (\r\n        <LoginContainer>\r\n            <LoginInnerContainer>\r\n                <img \r\n                    src='https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg'\r\n                    alt=''\r\n                />\r\n                <h1>Please Sign In To The Slack Clone</h1>\r\n                <p>For Portfolio Purposes Only</p>\r\n                <Button onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </LoginInnerContainer>\r\n            \r\n        </LoginContainer>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst LoginContainer = styled.div`\r\n    background-color: #f8f8f8;\r\n    height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`\r\n    padding: 100px;\r\n    text-align: center;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n    > img {\r\n        object-fit: contain;\r\n        height: 100px;\r\n        margin-bottom: 40px;\r\n    }\r\n\r\n    > Button {\r\n        margin-top: 50px;\r\n        text-transform: inherit !important;\r\n        background-color: #0a8d48 !important;\r\n        color: white;\r\n    }\r\n`;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport styled from 'styled-components';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from './firebase';\nimport Login from './components/Login';\nimport Spinner from 'react-spinkit';\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img \n            src='https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg'\n            alt=''\n          />\n          <Spinner \n            name='ball-spin-fade-loader'\n            color='purple' fadeIn='none'/>\n        </AppLoadingContents>\n      </AppLoading>\n    )\n  }\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ): (\n        <>\n        <Header />\n        <AppBody>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Chat />\n            </Route>\n          </Switch>\n        </AppBody>\n        \n        </>\n        )}\n      \n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}